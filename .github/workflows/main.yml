name: Javascript CI Test UI saveMoney
# env:
#   IMAGE_TAG: ${{ github.sha }}
#   REPO_NAME: lintelligent-investment-portfolio-management-frontend
  
on:
  push:
    branches:
      - mainz
  pull_request:
    branches:
      - mainz
      # xyz


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Build with npm
        run: | 
         # npm audit fix
          npm install --save
         # npm run build
          #npm ci
         # npm test
        env:
          CI: true  # If using Create React App, setting CI to true skips the linting step


      - name: Determine Build Status
        id: check-build-status
        run: |
          if [ $? -eq 0 ]; then
            echo "Build Status: Success" > build-status.txt
          else
            echo "Build Status: Failure" > build-status.txt
          fi
      - name: Create sample files
        run: |
          mkdir -p /tmp/github-actions-artifacts
          echo "This is a sample file." > /tmp/github-actions-artifacts/sample.txt
          echo "Another sample file content." > /tmp/github-actions-artifacts/another-sample.txt
      # - name: Archive artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: artifacts-${{env.REPO_NAME}}-${{ env.IMAGE_TAG }}
      #     path: .

  #     - name: build docker image
  #       run: docker build . --tag linvest21sie/${{env.REPO_NAME}}:${{ env.IMAGE_TAG }}

  #     - name: login to docker hub
  #       run: docker login -u linvest21sie -p Linvest210612!

  #     - name: push to docker hub  
  #       run: docker push linvest21sie/${{env.REPO_NAME}}:${{ env.IMAGE_TAG }}

  #     - name: Pull docker image file to EC2
  #       uses: appleboy/ssh-action@master
  #       with: 
  #         host: ${{ secrets.EC2_Public_IP}}
  #         username: ec2-user
  #         key: ${{ secrets.SSH_KEY_SECRET }}
  #         script: |
  #           sudo systemctl start docker
  #           sudo docker pull linvest21sie/${{env.REPO_NAME}}:${{ env.IMAGE_TAG }}
  #           sudo docker run -d linvest21sie/${{env.REPO_NAME}}:${{ env.IMAGE_TAG }}
  # notify:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Notify on Failure
  #       if: failure()
  #       run: |
  #         echo "Build failed. Sending email notification."
  #         # Replace the following line with your email sending logic
  #         echo "Sending email to: \"Lv00002@linvest21.comm, david.d.lin@linvest21.com, lv00005@linvest21.com\""
      # - name: Download artifacts
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: artifacts-${{env.REPO_NAME}}-${{ env.IMAGE_TAG }}
      #     path: ./downloaded-artifacts

      # - name: Display artifacts
      #   run: |
      #     echo "Contents of downloaded artifacts:"
      #     ls -R ./downloaded-artifacts
